<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!--扫描控制器,当配置了它后,Spring会自动的到com.mjl.controller
    下扫描带有@controller @service @component等注解等类,将他们自动实例化-->
    <context:component-scan base-package="com.mjl.controller" />

    <!--<mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与
    AnnotationMethodHandlerAdapter 两个bean,它解决了一些@controllerz注解使用时的提前配置-->
    <mvc:annotation-driven />

    <!--配置 页面控制器-->
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <!-- 多个拦截器，顺序执行 -->
        <mvc:interceptor>
            <!-- /** 表示所有的url，包括子url路径 -->
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/user/hallo.do"/>
            <mvc:exclude-mapping path="/user/login.do"/>
            <mvc:exclude-mapping path="/view/adminView.jsp"/>

            <bean class="com.mjl.filter.HanderInerceptorl"></bean>
        </mvc:interceptor>

        <!--&lt;!&ndash; 配置登陆拦截器 &ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.mjl.filter.HanderInerceptorlLogin"></bean>-->
        <!--</mvc:interceptor>-->
        <!--
        .....

         -->
    </mvc:interceptors>

</beans>