<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <!--namespace用于与DAO层的接口类进行绑定,这样我们无需实现DAO层的接口
  类,其接口类就能够自动的找到相关的SQL语句进行绑定实现-->
<mapper namespace="com.mjl.dao.IUserDao">
    <!--select表示查询,它的id名称必须与DAO层接口的方法名相同,否则无法绑定-->
    <select id="selectByName" parameterType="string" resultType="User">
        select * from employee where EmplName = #{EmplName}
    </select>

    <select id="selectById" parameterType="Integer" resultType="User">
        select * from employee where EmplId = #{EmplId}
    </select>

    <update id="updateUserById" parameterType="User">
        update employee set EmplName=#{EmplName},EmplPassword=#{EmplPassword} where EmplId=#{EmplId}
    </update>

    <select id="getAllUser" resultType="User">
        SELECT * FROM employee
    </select>

    <delete id="deleteById" parameterType="Integer">
        delete from employee where EmplId = #{EmplId}
    </delete>

    <insert id="addUser" parameterType="User">
        insert into employee(EmplId,EmplName,EmplPassword) values (#{EmplId},#{EmplName},#{EmplPassword})
    </insert>

    <select id="gerAllUserCount" parameterType="int" resultType="int">
        select count(*) from employee where 1=1
        <if test="EmplName!=null">
            and EmplName LIKE concat('%',#{EmplName},'%')
        </if>
        <if test="EmplId!=0">
            and emplId=#{EmplId}
        </if>
    </select>

    <select id="getUserByPage" resultType="User" parameterType="map">
        select * from employee where 1=1
        <if test="emplName!=null">
            and employee.EmplName LIKE concat('%',#{emplName},'%')
        </if>
        <if test="emplId!=0">
            and EmplId=#{emplId}
        </if>
        limit #{start},#{end}
    </select>

</mapper>